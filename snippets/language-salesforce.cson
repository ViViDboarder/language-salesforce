'.source.cls, .source.trigger':
  'abstract':
    'prefix': 'ab'
    'body': 'abstract '
  'catch':
    'prefix': 'ca'
    'body': 'catch (${1:Exception} ${2:e}) {\n\t$0\n}'
  'class':
    'prefix': 'cl'
    'body': 'class ${1:MyClass} ${2:extends ${3:Parent} }${4:implements ${5:Interface} }{\n\t$6\n}'
  'else if':
    'prefix': 'elif'
    'body': 'else if ($1) {\n\t$0\n}'
  'else':
    'prefix': 'el'
    'body': 'else {\n\t$0\n}'
  'for (each)':
    'prefix': 'fore'
    'body': 'for ($1 : $2) {\n\t$0\n}'
  'final':
    'prefix': 'fi'
    'body': 'final '
  'finally':
    'prefix': 'fy'
    'body': 'finally {\n\t$0\n}'
  'for':
    'prefix': 'for'
    'body': 'for ($1; $2; $3) {\n\t$0\n}'
  'if':
    'prefix': 'if'
    'body': 'if ($1) {\n\t$0\n}'
  'interface':
    'prefix': 'in'
    'body': 'interface ${1:MyInterface} ${2:extends ${3:Parent} }{\n\t$0\n}'
  'private':
    'prefix': 'pr'
    'body': 'private '
  'protected':
    'prefix': 'po'
    'body': 'protected '
  'public':
    'prefix': 'pu'
    'body': 'public '
  'return':
    'prefix': 're'
    'body': 'return '
  'static':
    'prefix': 'st'
    'body': 'static '
  'throw new':
    'prefix': 'tn'
    'body': 'throw new $0'
  'throw':
    'prefix': 'th'
    'body': 'throw $0'
  'try':
    'prefix': 'tr'
    'body': 'try {\n\t$0\n}'
  'variable':
    'prefix': 'v'
    'body': '${1:String} ${2:var}${3: = ${0:null}};'
'.source.trigger':
  'break':
    'prefix': 'br'
    'body': 'break;\n'
  'constant string':
    'prefix': 'cos'
    'body': 'static public final String ${1:var} = "$2";$0'
  'constant':
    'prefix': 'co'
    'body': 'static public final ${1:String} ${2:var} = $3;$0'
  'default':
    'prefix': 'de'
    'body': 'default:\n\t$0'
  'method (main)':
    'prefix': 'main'
    'body': 'public static void main(String[] args) {\n\t$0\n}'
  'method':
    'prefix': 'm'
    'body': '${1:void} ${2:method}($3) ${4:throws $5 }{\n\t$0\n}\n'
  'while':
    'prefix': 'wh'
    'body': 'while ($1) {\n\t$0\n}'
